node {
      stage('SourceCodeFromGit') {
      git 'https://github.com/devops-mptech/sample-app.git'
      }
      stage('MavenBuildWithoutTestCases') {
      sh label: '', script: 'mvn clean package -DskipTests'
      }
      stage('MavenBuild') {
      sh label: '', script: 'mvn clean package'
      }
      stage('DockerLogin') {
      withCredentials([string(credentialsId: 'DockerHubPasswd', variable: 'DockerHubPasswd')]) {
      sh label: '', script: "docker login -u devopsmptech -p ${DockerHubPasswd}"
      }
      }
      stage('DockerImageBuild') {
      sh label: '', script: 'docker build -t devopsmptech/app123:0.0.0 .'
      }
      stage('DockerImagePushToDockerHub') {
      sh label: '', script: 'docker push devopsmptech/app123:0.0.0'
      }
      stage('DockerLogin') {
      withCredentials([string(credentialsId: 'DockerHubPasswd', variable: 'DockerHubPasswd')]) {
      def docker_login = "docker login -u devopsmptech -p ${DockerHubPasswd}"
      sh label: '', script: "ssh -i /var/lib/jenkins/mptech.pem -o StrictHostKeyChecking=no ec2-user@172.31.83.176 ${docker_login}"
      }
      }
      stage('RunContaionerOnDevServer') {
      def docker_command = "docker run -d --name suresh -p 2020:8080 devopsmptech/app123:0.0.0"
      def docker_rm = "docker rm -rf suresh"
      sh label: '', script: '''ssh -i /var/lib/jenkins/mptech.pem ec2-user@172.31.83.176 "${docker_rm}"
      '''
      sh label: '', script: '''ssh -i /var/lib/jenkins/mptech.pem -o StrictHostKeyChecking=no ec2-user@172.31.83.176 ${docker_command}
      '''
      }
      stage('RunContaionerOnDevServer1') {
      def docker_command1 = "docker run -d --name suresh1 -p 2021:8080 devopsmptech/app123:0.0.0"
      def docker_rm1 = "docker rm -rf suresh"
      sh label: '', script: '''ssh -i /var/lib/jenkins/mptech.pem ec2-user@172.31.83.176 "${docker_rm1}"
      '''
      sh label: '', script: '''ssh -i /var/lib/jenkins/mptech.pem -o StrictHostKeyChecking=no ec2-user@172.31.83.176 ${docker_command1}
      '''
      }


}
