node {
    stage('CheckOutCodeFromSCM') {
    checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'githubpasswd', url: 'https://github.com/suresh-devops/sample-app.git']]])
    }
    version = sh (
    script: 'sh projectversion1.sh',
    returnStdout: true
    ).trim()
    stage('MavenBuildWithOutTests') {
    sh label: '', script: 'mvn clean package -DskipTests'
    }
    stage('MavenBuildWithTests') {
    sh label: '', script: 'mvn clean package'
    }
    stage('BuildingDockerImage') {
    sh label: '', script: "docker build -t devopsmptech/tomcatapp:${version} ."
    }
    stage('LoginToDockerHub') {
    withCredentials([string(credentialsId: 'DockerHubPasswd', variable: 'DockerHubPasswd')]) {
    sh label: '', script: "docker login -u devopsmptech -p ${DockerHubPasswd}"
    }
    
    }
    stage('PushDockerImageToDockerHub') {
    sh label: '', script: "docker push devopsmptech/tomcatapp:${version}"
    }
    stage('RunDockerContionerOnDevServer') {
    def command1 = "docker run -d --name suresh -p 8085:8080 devopsmptech/tomcatapp:${version}"
    def command2 = "docker rm -f suresh"
    def command3 = "docker rm -f suresh1"
    def command4 = "docker run -d --name suresh1 -p 8089:8080 devopsmptech/tomcatapp:${version}"
    sh label: '', script: "ssh -i /var/lib/jenkins/xyzkey.pem -o StrictHostKeyChecking=no ec2-user@172.31.82.122 ${command2}"
    sh label: '', script: "ssh -i /var/lib/jenkins/xyzkey.pem -o StrictHostKeyChecking=no ec2-user@172.31.82.122 ${command3}"
    sh label: '', script: "ssh -i /var/lib/jenkins/xyzkey.pem -o StrictHostKeyChecking=no ec2-user@172.31.82.122 ${command1}"
    sh label: '', script: "ssh -i /var/lib/jenkins/xyzkey.pem -o StrictHostKeyChecking=no ec2-user@172.31.82.122 ${command4}"
    }
}

