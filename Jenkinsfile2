node {
    stage('SourceCodeFromGit') {
    git credentialsId: 'GitHub', url: 'https://github.com/devops-mptech/sample-app.git'    
    }
    f = sh (
    script: 'sh projectversion.sh',
    returnStdout: true
    ).trim()
    stage('MvnSkipTests') {
    def Maven_Home = tool name: 'maven-3.3.9', type: 'maven'
    def Maven_Bin = "${Maven_Home}/bin"
    sh "${Maven_Bin}/mvn clean package -DskipTests"
    }
    stage('MvnWithTestsAndDeploy') {
    def Maven_Home = tool name: 'maven-3.3.9', type: 'maven'
    def Maven_Bin = "${Maven_Home}/bin"
    sh "${Maven_Bin}/mvn clean deploy"
    }
    stage('Dockerising_Application') {
    sh "docker build -t 172.31.38.8:8878/sampleapp:${f} ."    
    }
    stage('PushingDockerImageToNexus') {
    withCredentials([string(credentialsId: 'NexusPwd', variable: 'NexusPwd')]) {
    sh "docker login -u admin -p ${NexusPwd} 172.31.38.8:8878"
    } 
    sh "docker push 172.31.38.8:8878/sampleapp:${f}" 
    }  
    stage('RunContionerOnDev') {
    sshagent(['pemfile']) {
    withCredentials([string(credentialsId: 'NexusPwd', variable: 'NexusPwd')]) {
    def login_command = "docker login -u admin -p ${NexusPwd} 172.31.38.8:8878"
    def command1 = "docker run -d --name 'app1' -p 9696:8080 172.31.38.8:8878/sampleapp:${f}"
    def command2 = "docker rm -f app1"
    sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.90.229 ${login_command}"
    sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.90.229 ${command2}"
    sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.90.229 ${command1}"
    }    
    }
    }
    stage('EmailNotification') {
    mail bcc: '', body: 'Total Job Completed Successfully', cc: '', from: '', replyTo: '', subject: 'Sampleapp', to: 'devops.mptech@gmail.com'    
    }    
}
